package com.mycompany.evaluacion;

import java.awt.Graphics2D;
import java.awt.image.BufferedImage;
import java.io.File;
import javax.imageio.ImageIO;
import javax.swing.JFileChooser;

/**
 *
 * @author brian
 */
public class PantallaPrincipal extends javax.swing.JDialog {

    /**
     * Creates new form PantallaPrincipal
     */
    public PantallaPrincipal(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        lblAnchoImagen = new javax.swing.JLabel();
        lblAltoImagen = new javax.swing.JLabel();
        txtAltoImagen = new javax.swing.JTextField();
        txtAnchoImagen = new javax.swing.JTextField();
        lblAltoImagen1 = new javax.swing.JLabel();
        txtOrientacionImagen = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Prueba imagen");

        jFileChooser1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFileChooser1ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("Resultado");

        jPanel1.setBackground(new java.awt.Color(102, 102, 102));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 9, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel2.setText("Buscar imagen");

        lblAnchoImagen.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblAnchoImagen.setText("Ancho de la imagen:");

        lblAltoImagen.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblAltoImagen.setText("Alto de la imagen:");

        txtAltoImagen.setFont(new java.awt.Font("Segoe UI", 2, 14)); // NOI18N
        txtAltoImagen.setEnabled(false);

        txtAnchoImagen.setFont(new java.awt.Font("Segoe UI", 2, 14)); // NOI18N
        txtAnchoImagen.setEnabled(false);

        lblAltoImagen1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblAltoImagen1.setText("Orientacion pagina:");

        txtOrientacionImagen.setFont(new java.awt.Font("Segoe UI", 2, 14)); // NOI18N
        txtOrientacionImagen.setEnabled(false);
        txtOrientacionImagen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtOrientacionImagenActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(jFileChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 527, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(70, 70, 70)
                                .addComponent(lblAltoImagen))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblAnchoImagen, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblAltoImagen1, javax.swing.GroupLayout.Alignment.TRAILING))))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtAnchoImagen, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtOrientacionImagen, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtAltoImagen, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(35, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(102, 102, 102))))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(217, 217, 217)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(505, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(44, 44, 44)
                                .addComponent(jFileChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 338, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jLabel1)
                        .addGap(57, 57, 57)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblAnchoImagen)
                            .addComponent(txtAnchoImagen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblAltoImagen)
                            .addComponent(txtAltoImagen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtOrientacionImagen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblAltoImagen1))))
                .addContainerGap(26, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(28, 28, 28)
                    .addComponent(jLabel2)
                    .addContainerGap(366, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Maneja el evento de selección de archivos en un JFileChooser.
     *
     * @param evt El evento de acción generado.
     */
    private void jFileChooser1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFileChooser1ActionPerformed

        try {

            if (evt.getActionCommand().equals(JFileChooser.APPROVE_SELECTION)) {

                // Capturar ruta de la imagen
                java.io.File selectedFile = jFileChooser1.getSelectedFile();
                String filePath = selectedFile.getAbsolutePath();
                verificarArchivo(filePath);

                // Procesar la imagen
                BufferedImage originalImage = ImageIO.read(selectedFile);
                BufferedImage resizedImage = redimensionarImagen(originalImage, 796, 1123);

                // mostrar resultado en pantalla
                txtAnchoImagen.setText(String.valueOf(resizedImage.getWidth()));
                txtAltoImagen.setText(String.valueOf(resizedImage.getHeight()));

                if (resizedImage.getWidth() > resizedImage.getHeight()) {
                    txtOrientacionImagen.setText("Vertical");
                } else {
                    txtOrientacionImagen.setText("Horizontal");
                }

                // Construir la ruta para la imagen redimensionada en la misma carpeta
                String nombreArchivoOriginal = selectedFile.getName();
                String rutaCarpeta = selectedFile.getParent();
                String nombreArchivoRedimensionado = "redimensionado_" + nombreArchivoOriginal;
                File outputFile = new File(rutaCarpeta, nombreArchivoRedimensionado);

                // Guardar la imagen redimensionada
                ImageIO.write(resizedImage, "jpg", outputFile);
                System.out.println("Imagen redimensionada y guardada con éxito en la misma carpeta.");

            }

        } catch (Exception ex) {
            System.out.println("Error " + ex.getMessage());
        }

    }//GEN-LAST:event_jFileChooser1ActionPerformed

    private void txtOrientacionImagenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtOrientacionImagenActionPerformed

    }//GEN-LAST:event_txtOrientacionImagenActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PantallaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PantallaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PantallaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PantallaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                PantallaPrincipal dialog = new PantallaPrincipal(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    /**
     * Verifica si el archivo tiene una extensión de imagen JPG o JPEG.
     *
     * @param archivo La ruta o nombre del archivo a verificar.
     * @throws Exception Se lanza una excepción si el archivo no tiene una
     * extensión de imagen válida (.jpg o .jpeg).
     */
    protected void verificarArchivo(String archivo) throws Exception {

        String archivoEnMinusculas = archivo.toLowerCase();

        if (!(archivoEnMinusculas.endsWith(".jpg") || archivoEnMinusculas.endsWith(".jpeg"))) {
            throw new Exception("El archivo no es una imagen JPG o JPEG");
        }
    }

    /**
     * Redimensiona una imagen manteniendo su relación de aspecto original.
     *
     * @param originalImage La imagen original que se va a redimensionar.
     * @param nuevoAncho El nuevo ancho deseado.
     * @param nuevoAlto El nuevo alto deseado.
     * @return Una nueva imagen redimensionada.
     */
    protected BufferedImage redimensionarImagen(BufferedImage originalImage, int nuevoAncho, int nuevoAlto) {
        // Obtener el ratio original
        double ratioOriginal = (double) originalImage.getWidth() / originalImage.getHeight();

        // Calcular el nuevo ancho basado en el ratio y el nuevo alto
        int nuevoAnchoCalculado = (int) (nuevoAlto * ratioOriginal);

        // Verificar si el nuevo ancho calculado excede el ancho máximo permitido
        if (nuevoAnchoCalculado > nuevoAncho) {
            nuevoAnchoCalculado = nuevoAncho;
            nuevoAlto = (int) (nuevoAncho / ratioOriginal);
        }

        // Crear una nueva imagen redimensionada
        BufferedImage imagenRedimensionada = new BufferedImage(nuevoAnchoCalculado, nuevoAlto, originalImage.getType());
        Graphics2D g = imagenRedimensionada.createGraphics();
        g.drawImage(originalImage, 0, 0, nuevoAnchoCalculado, nuevoAlto, null);
        g.dispose();

        return imagenRedimensionada;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblAltoImagen;
    private javax.swing.JLabel lblAltoImagen1;
    private javax.swing.JLabel lblAnchoImagen;
    private javax.swing.JTextField txtAltoImagen;
    private javax.swing.JTextField txtAnchoImagen;
    private javax.swing.JTextField txtOrientacionImagen;
    // End of variables declaration//GEN-END:variables
}
